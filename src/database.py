"""A basic CSV flat file implementation"""

# Database spec:
# Col-1: ID (unique for each record, generated by get_unused_id)
# Col-2:
# Col-3:


import csv

def append_to_database(data_dict):
    """Appends a row to the end of the database"""

    with open("database.csv", "r", encoding="UTF-8") as csv_fp:
        reader = csv.reader(csv_fp)

        data = []

        for row in reader:
            data.append(row)

    with open("./database.csv", "w", encoding="UTF-8", newline='') as csv_fp:
        writer = csv.writer(csv_fp)

        data.append(data_dict.values())

        writer.writerows(data)

def read_row_by_id(id_to_find : int):
    """Reads a row by its id, returns 0 if the record does not exist"""

    with open("./database.csv", "r", encoding="UTF-8") as csv_fp:
        reader = csv.reader(csv_fp)

        for row in reader:
            if int(row[0]) == id_to_find:
                return row

    return 0

def get_unused_id():
    """get some new id that is not currently being used"""

    unused_id = 0

    with open("database.csv", "r", encoding="UTF-8") as csv_fp:
        reader = csv.reader(csv_fp)

        data = []

        for row in reader:
            data.append(row)

    condition = True
    while condition:
        unused_id = unused_id + 1
        condition = False
        for row in data:

            if int(row[0]) == unused_id:
                condition = True

    return unused_id
